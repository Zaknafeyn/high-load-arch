worker_processes auto;
events { 
  worker_connections 8192;
}

http {
  log_format compression '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" "$gzip_ratio" upstream_addr=$upstream_addr';
  proxy_cache_path /tmp/nginx-cache keys_zone=one:10m;
  map $request_method $purge_method {
        PURGE 1;
        default 0;
    }

  upstream localhost {
    keepalive 32;
    # These are references to our backend containers, facilitated by
    # Compose, as defined in docker-compose.yml   
    server db-reader-1:80;
    server db-reader-2:80;
    server db-reader-3:80;
  }
   
  server {
    listen 8080;
    #worker_processes auto;
    server_name localhost;
    gzip on;
    gzip_types application/javascript image/* text/css;
    gunzip on;
    access_log /tmp/logs/nginx-access.log compression;
    error_log /tmp/logs/ngin-error.log warn;
    keepalive_requests 30;
    keepalive_timeout 75s;
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    root /var/www;

    location / {
      proxy_pass http://localhost;
      proxy_set_header Host $host;
    }

    #...after the location / block
    location ~* \.(jpg|jpeg|png|gif|ico|svg)$ {
      expires 30d;

      add_header X-Proxy-Cache $upstream_cache_status;
      proxy_cache one;
      access_log off;
      open_file_cache_min_uses 2;
      add_header Cache-Control public;
    }
    location ~* \.(css|js)$ {
       expires 7d;
    }

    location /static/ {
      try_files $uri $uri/ $uri/index.html =404;
    }

    location /ru/ {
      proxy_cache one;
      proxy_pass https://habr.com;
      add_header X-Proxy-Cache $upstream_cache_status;
      
      # unavailable in free version
      #proxy_cache_purge $purge_method;

      open_file_cache_min_uses 2;
      add_header Cache-Control public;
      #proxy_pass http://example.com;
    }
  }
}